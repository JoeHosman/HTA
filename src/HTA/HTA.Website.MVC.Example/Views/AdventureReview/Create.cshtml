@model HTA.Website.MVC.Example.Models.AdventureReviewModel
@{
    ViewBag.Title = "Create";
}
<h2>
    Create</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.autosize-min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/MapsHelper.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/google-maps-3-vs-1-0-vsdoc.js")"></script>
<script src="@Url.Content("~/Scripts/google-maps-3-vs-1-0.js")"></script>
<script src="@Url.Content("~/Scripts/SelectListJQueryPopulator.js")"></script>
<script src="@Url.Content("~/Scripts/chosen.jquery.js")" type="text/javascript"></script>
<link href="/Content/chosen.css" rel="stylesheet" type="text/css" />
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>AdventureReview</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.Review.AdventureName) :
            @Html.EditorFor(model => model.Review.AdventureName)
            @Html.ValidationMessageFor(model => model.Review.AdventureName)
        </div>
        <div style="display: block">
            <div class="Map_image" id="my_map" style="width: 500px; height: 300px; display: none;
                float: right; padding-top: 3px">
            </div>
            <div class="editor-label">
                Adventure Address</div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AdventureAddress)
            </div>
            <div class="editor-label">
                Lat</div>
            <div class="editor-field">
                <input length="4" id="Location_Lat" name="Location.Lat" type="text" value="0" />
            </div>
            <div class="editor-label">
                <label for="Location_Lon">
                    Lon</label>
            </div>
            <div class="editor-field">
                <input length="4" id="Location_Lon" name="Location.Lon" type="text" value="0" />
            </div>
            <input id="findNearByBtn" type="button" value="Find Your Adventure Location or Create an New Adventure Location" />
            <div class="editor-field">
                <div id="regionSelectionDiv" style="display: none">
                    Regions:
                    <select id="nearByRegionDD" name="nearByRegionDD" data-placeholder="Choose a Region..."
                        class="chzn-select" style="width: 350px;" tabindex="2">
                        <option value=""></option>
                    </select><br />
                    Locations:
                    <select id="nearByLocationDD" name="nearByLocationDD" data-placeholder="Choose a Location..."
                        class="chzn-select" style="width: 350px;" tabindex="2">
                        <option value=""></option>
                    </select>
                    <br />
                    <div id="locationInfoDiv">
                        <div class="editor-label">
                            Adventure Address</div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.AdventureLat, new { id = "lat" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div>
            @Html.DropDownListFor(m => m.AdventureTypeId, Model.SelectableTypes.Select(s => new SelectListItem { Text = s.Name, Value = s.Id }), new { id = "selectAdventureType" })
        </div>
        <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&region=US"></script>
        <script type="text/javascript">
            function runMap() {
                document.getElementById('my_map').style.display = 'block';
                init_draggable_map('my_map', 50, 50, 20, 'My Name', 'Location_Lat', 'Location_Lon', 'http://209.145.32.110/Content/icons/default.png');
            }
            
        </script>
        <script type="text/javascript">
            $("#selectAdventureType").unbind('change');

            $("#AdventureAddress").unbind('change');

            var nearbyLocations = { };

            $("#nearByRegionDD").change(function() {
                var id = document.getElementById('nearByRegionDD').value;

                var locations = [];

                var createNewLocationChoice = Object();
                createNewLocationChoice.id = '';
                createNewLocationChoice.name = 'Create New Location';

                locations.push(createNewLocationChoice);

                if(null != id) {

                    for (var i in nearbyLocations) {
                        var l = nearbyLocations[i];

//                        alert(id + ' = ' + l.region.id);

                        if(id == l.region.id) {
                            locations.push(l);
                        }
                    }
                }
                
                setSelectOptions($('#nearByLocationDD'), locations, 'id', 'name');
                $("#nearByLocationDD").trigger("liszt:updated");
            });
            
              $("#nearByLocationDD").change(function() {
                var id = document.getElementById('nearByLocationDD').value;

                for( var i in nearbyLocations) {

                    var loc = nearbyLocations[i];

                    if(id == loc.id) {
                        alert(id + '\n' + loc.point.lat + "," + loc.point.lon );
                    }
                    
                }
              });
            
            $("#findNearByBtn").click(function(){
                var lat = document.getElementById('Location_Lat').value;
                var lon = document.getElementById('Location_Lon').value;

                var latLon = lat + "," + lon;
                
                var u = "http://localhost:10768/adventure/locations/nearby/" + latLon + "?format=json";
  
                $.ajax({
                    url:u,
                    dataType: 'jsonp',
                    
                    success:function(json){
                        nearbyLocations = json.nearByAdventureLocations;
                        var nearbyRegions = {};
                        var regions = [];

                        var blankRegion = Object();
                        blankRegion.id = '';
                        blankRegion.name = 'Create New Region';
                        regions.push(blankRegion);

                        for ( var i in nearbyLocations) {
                            var region = nearbyLocations[i].region;
                            
                            if(null != region.id && (nearbyRegions.length == 0 || !nearbyRegions.hasOwnProperty(region.id))) {
//                                alert('new region: ' + region.id);
                                nearbyRegions[region.id] = region;
                                regions.push(region);
                            } else {
//                                alert('existing region: ' + region.id);
                            }
                        }
                        setSelectOptions($('#nearByRegionDD'), regions, 'id', 'name');
                        setSelectOptions($('#nearByLocationDD'), nearbyLocations, 'id', 'name');
                        $("#nearByLocationDD").trigger("liszt:updated");
                        $("#nearByRegionDD").trigger("liszt:updated");
                        $("#regionSelectionDiv").show();
                    },
                    error: function(){
                alert('error');
            },

                });
            });

            $("#AdventureAddress").change(function() { 
                var address = document.getElementById('AdventureAddress').value;
                getMarkerFromAddress('http://209.145.32.110/Content/icons/default.png', address);
            });

            $("#selectAdventureType").change(function(){
                // alert what the selected text is
                //alert($("#selectAdventureType option:selected").text());  
        
                // empty the data cards
                $("#dataCards").html("");

                function AppendDataCard(element, dataCardJson, index) {
                    
                    if(!dataCardJson.title) {
                        dataCardJson.title = "";
                    }
                    if(!dataCardJson.body) {
                        dataCardJson.body = "";
                    }
                    var div = element.append("<div>");
                    div.append("<h3>DataCard #" + index + "</h3>");
                    div.append("Title: <input type='text' id='dataCardTitle"+index +"' name='dataCardTitle"+index +"' class='' value='"+dataCardJson.title +"'  /><br/>");

                    div.append("Body: <textarea id='dataCardBody"+index +"' name='dataCardBody"+index +"' class='' > " + dataCardJson.body +"</textarea ><br/>");
                    element.append("</div>");
                    element.append("<br/>");
                    element.append("<br/>");
                }
            
                // perform the request
                $.ajax({
                    url:"http://localhost:10768/Adventure/Type/DataCards/" + $("#selectAdventureType option:selected").text() + "?format=json",
                    dataType: 'jsonp', 
                    
                    success:function(json){
                        for(var i=0;i<json.dataCards.length;i++){
                            AppendDataCard($("#dataCards"), json.dataCards[i], i);
                            $("#DataCardCount").val(json.dataCards.length);
//                    $("#dataCards").append("<input type='text' name='datafield"+i +"' class=''  /><br/>");
                        }
                    },
                    error:function(){
                        alert("Error");
                
                    },  
                });
            });
        </script>
        <br />
        <div>
            <h2>
                DataCards:
            </h2>
            @Html.HiddenFor(m => m.DataCardCount)
            <div id="dataCards">
            </div>
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
    $(".chzn-select").chosen();

    //        $(".chzn-select-deselect").chosen({ allow_single_deselect: true });
</script>
